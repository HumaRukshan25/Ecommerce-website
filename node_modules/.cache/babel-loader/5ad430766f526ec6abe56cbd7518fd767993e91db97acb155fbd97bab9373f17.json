{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Downloads\\\\002 01-starting-project.zip-20231206T062258Z-001\\\\002 01-starting-project\\\\01-starting-project\\\\src\\\\components\\\\Users\\\\AddUser.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './AddUser.css'; // Import the CSS file\nimport UserList from './UserList'; // Import the UserList component\n// import the Wrapper component if available\nimport Login from './Login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, this);\n};\n_c = Card;\nconst AddUser = props => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [age, setAge] = useState('');\n  const [college, setCollege] = useState('');\n  const [email, setEmail] = useState(''); // New state for email\n  const [password, setPassword] = useState(''); // New state for password\n  const [submittedData, setSubmittedData] = useState([]);\n  const [error, setError] = useState(null);\n\n  // Refs for name, age, college, email, and password inputs\n  const nameInputRef = useRef();\n  const ageInputRef = useRef();\n  const collegeInputRef = useRef();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const addUserHandler = event => {\n    event.preventDefault();\n\n    // Accessing input values using refs\n    const enteredName = nameInputRef.current.value;\n    const enteredAge = ageInputRef.current.value;\n    const enteredCollege = collegeInputRef.current.value;\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    // Validation checks\n    if (enteredName.trim() === '' || enteredAge.trim() === '' || enteredCollege.trim() === '' || enteredEmail.trim() === '' ||\n    // Validate Email\n    enteredPassword.trim() === '' ||\n    // Validate Password\n    isNaN(enteredAge) || !/^[a-zA-Z]+$/.test(enteredName)) {\n      setError('Please enter valid data for all fields.');\n      return;\n    }\n\n    // Add your logic for handling user submission here\n    const userData = {\n      username: enteredName,\n      age: enteredAge,\n      college: enteredCollege,\n      email: enteredEmail,\n      password: enteredPassword\n    };\n    console.log('User Submitted:', userData);\n    setSubmittedData(prevData => [...prevData, userData]);\n    // Reset input fields and error state after submission\n    setUsername('');\n    setAge('');\n    setCollege('');\n    setEmail('');\n    setPassword('');\n    setError(null);\n\n    // Clear input values using refs\n    nameInputRef.current.value = '';\n    ageInputRef.current.value = '';\n    collegeInputRef.current.value = '';\n    emailInputRef.current.value = '';\n    passwordInputRef.current.value = '';\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addUserHandler,\n      children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"age\",\n        children: \"Age (Years)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"age\",\n        type: \"number\",\n        value: age,\n        onChange: e => setAge(e.target.value),\n        ref: ageInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"college\",\n        children: \"College Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"college\",\n        type: \"text\",\n        value: college,\n        onChange: e => setCollege(e.target.value),\n        ref: collegeInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"email\",\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        ref: emailInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"password\",\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        ref: passwordInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), submittedData.length > 0 && /*#__PURE__*/_jsxDEV(UserList, {\n      users: submittedData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 36\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(AddUser, \"4aPtOhlwdfeP9UpSktZBUlGFvss=\");\n_c2 = AddUser;\nexport default AddUser;\nvar _c, _c2;\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"AddUser\");","map":{"version":3,"names":["React","useState","useRef","UserList","Login","jsxDEV","_jsxDEV","Card","props","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","AddUser","_s","username","setUsername","age","setAge","college","setCollege","email","setEmail","password","setPassword","submittedData","setSubmittedData","error","setError","nameInputRef","ageInputRef","collegeInputRef","emailInputRef","passwordInputRef","addUserHandler","event","preventDefault","enteredName","current","value","enteredAge","enteredCollege","enteredEmail","enteredPassword","trim","isNaN","test","userData","console","log","prevData","onSubmit","style","color","htmlFor","id","type","onChange","e","target","ref","length","users","_c2","$RefreshReg$"],"sources":["C:/Users/dell/Downloads/002 01-starting-project.zip-20231206T062258Z-001/002 01-starting-project/01-starting-project/src/components/Users/AddUser.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport './AddUser.css'; // Import the CSS file\r\nimport UserList from './UserList'; // Import the UserList component\r\n// import the Wrapper component if available\r\nimport Login from './Login';\r\nconst Card = (props) => {\r\n  return <div className=\"card\">{props.children}</div>;\r\n};\r\n\r\nconst AddUser = (props) => {\r\n  const [username, setUsername] = useState('');\r\n  const [age, setAge] = useState('');\r\n  const [college, setCollege] = useState('');\r\n  const [email, setEmail] = useState(''); // New state for email\r\n  const [password, setPassword] = useState(''); // New state for password\r\n  const [submittedData, setSubmittedData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Refs for name, age, college, email, and password inputs\r\n  const nameInputRef = useRef();\r\n  const ageInputRef = useRef();\r\n  const collegeInputRef = useRef();\r\n  const emailInputRef = useRef();\r\n  const passwordInputRef = useRef();\r\n\r\n  const addUserHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    // Accessing input values using refs\r\n    const enteredName = nameInputRef.current.value;\r\n    const enteredAge = ageInputRef.current.value;\r\n    const enteredCollege = collegeInputRef.current.value;\r\n    const enteredEmail = emailInputRef.current.value;\r\n    const enteredPassword = passwordInputRef.current.value;\r\n\r\n    // Validation checks\r\n    if (\r\n      enteredName.trim() === '' ||\r\n      enteredAge.trim() === '' ||\r\n      enteredCollege.trim() === '' ||\r\n      enteredEmail.trim() === '' || // Validate Email\r\n      enteredPassword.trim() === '' || // Validate Password\r\n      isNaN(enteredAge) ||\r\n      !/^[a-zA-Z]+$/.test(enteredName)\r\n    ) {\r\n      setError('Please enter valid data for all fields.');\r\n      return;\r\n    }\r\n\r\n    // Add your logic for handling user submission here\r\n    const userData = {\r\n      username: enteredName,\r\n      age: enteredAge,\r\n      college: enteredCollege,\r\n      email: enteredEmail,\r\n      password: enteredPassword,\r\n    };\r\n    console.log('User Submitted:', userData);\r\n    setSubmittedData((prevData) => [...prevData, userData]);\r\n    // Reset input fields and error state after submission\r\n    setUsername('');\r\n    setAge('');\r\n    setCollege('');\r\n    setEmail('');\r\n    setPassword('');\r\n    setError(null);\r\n\r\n    // Clear input values using refs\r\n    nameInputRef.current.value = '';\r\n    ageInputRef.current.value = '';\r\n    collegeInputRef.current.value = '';\r\n    emailInputRef.current.value = '';\r\n    passwordInputRef.current.value = '';\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      {/* Use Card component to wrap the form */}\r\n      <form onSubmit={addUserHandler}>\r\n        {error && <p style={{ color: 'red' }}>{error}</p>}\r\n        <label htmlFor=\"username\">Username</label>\r\n        <input\r\n          id=\"username\"\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          ref={nameInputRef}\r\n        />\r\n\r\n        <label htmlFor=\"age\">Age (Years)</label>\r\n        <input\r\n          id=\"age\"\r\n          type=\"number\"\r\n          value={age}\r\n          onChange={(e) => setAge(e.target.value)}\r\n          ref={ageInputRef}\r\n        />\r\n\r\n        <label htmlFor=\"college\">College Name</label>\r\n        <input\r\n          id=\"college\"\r\n          type=\"text\"\r\n          value={college}\r\n          onChange={(e) => setCollege(e.target.value)}\r\n          ref={collegeInputRef}\r\n        />\r\n\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          id=\"email\"\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          ref={emailInputRef}\r\n        />\r\n\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          id=\"password\"\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          ref={passwordInputRef}\r\n        />\r\n\r\n        <button type=\"submit\">Add User</button>\r\n      </form>\r\n\r\n      {submittedData.length > 0 && <UserList users={submittedData} />}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AddUser;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAO,eAAe,CAAC,CAAC;AACxB,OAAOC,QAAQ,MAAM,YAAY,CAAC,CAAC;AACnC;AACA,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC5B,MAAMC,IAAI,GAAIC,KAAK,IAAK;EACtB,oBAAOF,OAAA;IAAKG,SAAS,EAAC,MAAM;IAAAC,QAAA,EAAEF,KAAK,CAACE;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACrD,CAAC;AAACC,EAAA,GAFIR,IAAI;AAIV,MAAMS,OAAO,GAAIR,KAAK,IAAK;EAAAS,EAAA;EACzB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACmB,GAAG,EAAEC,MAAM,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACyB,QAAQ,EAAEC,WAAW,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAAC2B,aAAa,EAAEC,gBAAgB,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC6B,KAAK,EAAEC,QAAQ,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAM+B,YAAY,GAAG9B,MAAM,CAAC,CAAC;EAC7B,MAAM+B,WAAW,GAAG/B,MAAM,CAAC,CAAC;EAC5B,MAAMgC,eAAe,GAAGhC,MAAM,CAAC,CAAC;EAChC,MAAMiC,aAAa,GAAGjC,MAAM,CAAC,CAAC;EAC9B,MAAMkC,gBAAgB,GAAGlC,MAAM,CAAC,CAAC;EAEjC,MAAMmC,cAAc,GAAIC,KAAK,IAAK;IAChCA,KAAK,CAACC,cAAc,CAAC,CAAC;;IAEtB;IACA,MAAMC,WAAW,GAAGR,YAAY,CAACS,OAAO,CAACC,KAAK;IAC9C,MAAMC,UAAU,GAAGV,WAAW,CAACQ,OAAO,CAACC,KAAK;IAC5C,MAAME,cAAc,GAAGV,eAAe,CAACO,OAAO,CAACC,KAAK;IACpD,MAAMG,YAAY,GAAGV,aAAa,CAACM,OAAO,CAACC,KAAK;IAChD,MAAMI,eAAe,GAAGV,gBAAgB,CAACK,OAAO,CAACC,KAAK;;IAEtD;IACA,IACEF,WAAW,CAACO,IAAI,CAAC,CAAC,KAAK,EAAE,IACzBJ,UAAU,CAACI,IAAI,CAAC,CAAC,KAAK,EAAE,IACxBH,cAAc,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,IAC5BF,YAAY,CAACE,IAAI,CAAC,CAAC,KAAK,EAAE;IAAI;IAC9BD,eAAe,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE;IAAI;IACjCC,KAAK,CAACL,UAAU,CAAC,IACjB,CAAC,aAAa,CAACM,IAAI,CAACT,WAAW,CAAC,EAChC;MACAT,QAAQ,CAAC,yCAAyC,CAAC;MACnD;IACF;;IAEA;IACA,MAAMmB,QAAQ,GAAG;MACfhC,QAAQ,EAAEsB,WAAW;MACrBpB,GAAG,EAAEuB,UAAU;MACfrB,OAAO,EAAEsB,cAAc;MACvBpB,KAAK,EAAEqB,YAAY;MACnBnB,QAAQ,EAAEoB;IACZ,CAAC;IACDK,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,QAAQ,CAAC;IACxCrB,gBAAgB,CAAEwB,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAEH,QAAQ,CAAC,CAAC;IACvD;IACA/B,WAAW,CAAC,EAAE,CAAC;IACfE,MAAM,CAAC,EAAE,CAAC;IACVE,UAAU,CAAC,EAAE,CAAC;IACdE,QAAQ,CAAC,EAAE,CAAC;IACZE,WAAW,CAAC,EAAE,CAAC;IACfI,QAAQ,CAAC,IAAI,CAAC;;IAEd;IACAC,YAAY,CAACS,OAAO,CAACC,KAAK,GAAG,EAAE;IAC/BT,WAAW,CAACQ,OAAO,CAACC,KAAK,GAAG,EAAE;IAC9BR,eAAe,CAACO,OAAO,CAACC,KAAK,GAAG,EAAE;IAClCP,aAAa,CAACM,OAAO,CAACC,KAAK,GAAG,EAAE;IAChCN,gBAAgB,CAACK,OAAO,CAACC,KAAK,GAAG,EAAE;EACrC,CAAC;EAED,oBACEpC,OAAA,CAACC,IAAI;IAAAG,QAAA,gBAEHJ,OAAA;MAAMgD,QAAQ,EAAEjB,cAAe;MAAA3B,QAAA,GAC5BoB,KAAK,iBAAIxB,OAAA;QAAGiD,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAM,CAAE;QAAA9C,QAAA,EAAEoB;MAAK;QAAAnB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjDR,OAAA;QAAOmD,OAAO,EAAC,UAAU;QAAA/C,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC1CR,OAAA;QACEoD,EAAE,EAAC,UAAU;QACbC,IAAI,EAAC,MAAM;QACXjB,KAAK,EAAExB,QAAS;QAChB0C,QAAQ,EAAGC,CAAC,IAAK1C,WAAW,CAAC0C,CAAC,CAACC,MAAM,CAACpB,KAAK,CAAE;QAC7CqB,GAAG,EAAE/B;MAAa;QAAArB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC,eAEFR,OAAA;QAAOmD,OAAO,EAAC,KAAK;QAAA/C,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxCR,OAAA;QACEoD,EAAE,EAAC,KAAK;QACRC,IAAI,EAAC,QAAQ;QACbjB,KAAK,EAAEtB,GAAI;QACXwC,QAAQ,EAAGC,CAAC,IAAKxC,MAAM,CAACwC,CAAC,CAACC,MAAM,CAACpB,KAAK,CAAE;QACxCqB,GAAG,EAAE9B;MAAY;QAAAtB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC,eAEFR,OAAA;QAAOmD,OAAO,EAAC,SAAS;QAAA/C,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC7CR,OAAA;QACEoD,EAAE,EAAC,SAAS;QACZC,IAAI,EAAC,MAAM;QACXjB,KAAK,EAAEpB,OAAQ;QACfsC,QAAQ,EAAGC,CAAC,IAAKtC,UAAU,CAACsC,CAAC,CAACC,MAAM,CAACpB,KAAK,CAAE;QAC5CqB,GAAG,EAAE7B;MAAgB;QAAAvB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,eAEFR,OAAA;QAAOmD,OAAO,EAAC,OAAO;QAAA/C,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpCR,OAAA;QACEoD,EAAE,EAAC,OAAO;QACVC,IAAI,EAAC,OAAO;QACZjB,KAAK,EAAElB,KAAM;QACboC,QAAQ,EAAGC,CAAC,IAAKpC,QAAQ,CAACoC,CAAC,CAACC,MAAM,CAACpB,KAAK,CAAE;QAC1CqB,GAAG,EAAE5B;MAAc;QAAAxB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC,eAEFR,OAAA;QAAOmD,OAAO,EAAC,UAAU;QAAA/C,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC1CR,OAAA;QACEoD,EAAE,EAAC,UAAU;QACbC,IAAI,EAAC,UAAU;QACfjB,KAAK,EAAEhB,QAAS;QAChBkC,QAAQ,EAAGC,CAAC,IAAKlC,WAAW,CAACkC,CAAC,CAACC,MAAM,CAACpB,KAAK,CAAE;QAC7CqB,GAAG,EAAE3B;MAAiB;QAAAzB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,eAEFR,OAAA;QAAQqD,IAAI,EAAC,QAAQ;QAAAjD,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,EAENc,aAAa,CAACoC,MAAM,GAAG,CAAC,iBAAI1D,OAAA,CAACH,QAAQ;MAAC8D,KAAK,EAAErC;IAAc;MAAAjB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEX,CAAC;AAACG,EAAA,CA1HID,OAAO;AAAAkD,GAAA,GAAPlD,OAAO;AA4Hb,eAAeA,OAAO;AAAC,IAAAD,EAAA,EAAAmD,GAAA;AAAAC,YAAA,CAAApD,EAAA;AAAAoD,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}