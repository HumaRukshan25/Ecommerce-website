{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Downloads\\\\002 01-starting-project.zip-20231206T062258Z-001\\\\002 01-starting-project\\\\01-starting-project\\\\src\\\\components\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from 'react';\nimport './Login.css';\n// Reducer function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loginReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_EMAIL':\n      return {\n        ...state,\n        email: action.payload\n      };\n    case 'SET_PASSWORD':\n      return {\n        ...state,\n        password: action.payload\n      };\n    case 'RESET_FORM':\n      return {\n        email: '',\n        password: ''\n      };\n    default:\n      return state;\n  }\n};\nconst Login = () => {\n  _s();\n  // Initial state\n  const initialState = {\n    email: '',\n    password: ''\n  };\n\n  // useReducer hook\n  const [state, dispatch] = useReducer(loginReducer, initialState);\n\n  // Event handlers\n  const handleEmailChange = e => {\n    dispatch({\n      type: 'SET_EMAIL',\n      payload: e.target.value\n    });\n  };\n  const handlePasswordChange = e => {\n    dispatch({\n      type: 'SET_PASSWORD',\n      payload: e.target.value\n    });\n  };\n  const handleLoginSubmit = e => {\n    e.preventDefault();\n    // Add logic for login submission using state.email and state.password\n    console.log('Logging in with:', state.email, state.password);\n\n    // Reset the form after submission\n    dispatch({\n      type: 'RESET_FORM'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLoginSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        value: state.email,\n        onChange: handleEmailChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        value: state.password,\n        onChange: handlePasswordChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useReducer","jsxDEV","_jsxDEV","loginReducer","state","action","type","email","payload","password","Login","_s","initialState","dispatch","handleEmailChange","e","target","value","handlePasswordChange","handleLoginSubmit","preventDefault","console","log","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","_c","$RefreshReg$"],"sources":["C:/Users/dell/Downloads/002 01-starting-project.zip-20231206T062258Z-001/002 01-starting-project/01-starting-project/src/components/Login/Login.js"],"sourcesContent":["import React, { useReducer } from 'react';\r\nimport './Login.css';\r\n// Reducer function\r\nconst loginReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'SET_EMAIL':\r\n      return { ...state, email: action.payload };\r\n    case 'SET_PASSWORD':\r\n      return { ...state, password: action.payload };\r\n    case 'RESET_FORM':\r\n      return { email: '', password: '' };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Login = () => {\r\n  // Initial state\r\n  const initialState = { email: '', password: '' };\r\n\r\n  // useReducer hook\r\n  const [state, dispatch] = useReducer(loginReducer, initialState);\r\n\r\n  // Event handlers\r\n  const handleEmailChange = (e) => {\r\n    dispatch({ type: 'SET_EMAIL', payload: e.target.value });\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    dispatch({ type: 'SET_PASSWORD', payload: e.target.value });\r\n  };\r\n\r\n  const handleLoginSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Add logic for login submission using state.email and state.password\r\n    console.log('Logging in with:', state.email, state.password);\r\n\r\n    // Reset the form after submission\r\n    dispatch({ type: 'RESET_FORM' });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleLoginSubmit}>\r\n        <label htmlFor=\"email\">Email:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"email\"\r\n          value={state.email}\r\n          onChange={handleEmailChange}\r\n        />\r\n\r\n        <label htmlFor=\"password\">Password:</label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          value={state.password}\r\n          onChange={handlePasswordChange}\r\n        />\r\n\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}